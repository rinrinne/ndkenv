#!/usr/bin/env bash
#
# Summary: Display the full path to an executable
#
# Usage: ndkenv which <command>
#
# Displays the full path to the executable that ndkenv will invoke when
# you run the given command.

set -e
[ -n "$NDKENV_DEBUG" ] && set -x

# Provide ndkenv completions
if [ "$1" = "--complete" ]; then
  exec ndkenv shims --short
fi

expand_path() {
  if [ ! -d "$1" ]; then
    return 1
  fi

  local cwd="$(pwd)"
  cd "$1"
  pwd
  cd "$cwd"
}

remove_from_path() {
  local path_to_remove="$(expand_path "$1")"
  local result=""

  if [ -z "$path_to_remove" ]; then
    echo "${PATH}"
    return
  fi

  local paths
  IFS=: paths=($PATH)

  for path in "${paths[@]}"; do
    path="$(expand_path "$path" || true)"
    if [ -n "$path" ] && [ "$path" != "$path_to_remove" ]; then
      result="${result}${path}:"
    fi
  done

  echo "${result%:}"
}

NDKENV_VERSION="$(ndkenv-version-name)"
NDKENV_COMMAND="$1"

if [ -z "$NDKENV_COMMAND" ]; then
  ndkenv-help --usage which >&2
  exit 1
fi

if [ "$NDKENV_VERSION" = "system" ]; then
  PATH="$(remove_from_path "${NDKENV_ROOT}/shims")"
  NDKENV_COMMAND_PATH="$(command -v "$NDKENV_COMMAND" || true)"
else
  NDKENV_COMMAND_PATH="${NDKENV_ROOT}/versions/${NDKENV_VERSION}/${NDKENV_COMMAND}"
fi

OLDIFS="$IFS"
IFS=$'\n' scripts=(`ndkenv-hooks which`)
IFS="$OLDIFS"
for script in "${scripts[@]}"; do
  source "$script"
done

if [ -x "$NDKENV_COMMAND_PATH" ]; then
  echo "$NDKENV_COMMAND_PATH"
else
  echo "ndkenv: $NDKENV_COMMAND: command not found" >&2

  versions="$(ndkenv-whence "$NDKENV_COMMAND" || true)"
  if [ -n "$versions" ]; then
    { echo
      echo "The \`$1' command exists in these NDK versions:"
      echo "$versions" | sed 's/^/  /g'
      echo
    } >&2
  fi

  exit 127
fi
